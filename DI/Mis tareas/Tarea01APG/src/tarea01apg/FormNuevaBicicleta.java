package tarea01apg;

import java.awt.Cursor;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;

/**
 *
 * @author andres
 */
public class FormNuevaBicicleta extends javax.swing.JDialog {

    /**
     * Crea nuevo formulario FormNuevaBicicleta
     */
    public FormNuevaBicicleta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        desabilitarInputsAlIniciarFormulario();
        anadirEventosPersonalizados(
                this.comboboxTamanioRueda,
                this.comboboxMaterialCuadroTrail,
                this.comboboxMaterialCuadroCarretera,
                this.comboboxTipoFreno);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotonesTipo = new javax.swing.ButtonGroup();
        panelPrincipal = new javax.swing.JPanel();
        etiquetaCodigo = new javax.swing.JLabel();
        campoTextoCodigo = new javax.swing.JTextField();
        etiquetaModelo = new javax.swing.JLabel();
        campoTextoModelo = new javax.swing.JTextField();
        labelTitulo = new javax.swing.JLabel();
        campoTextoMarca = new javax.swing.JTextField();
        etiquetaMarca = new javax.swing.JLabel();
        panelTipo = new javax.swing.JPanel();
        etiquetaTipo = new javax.swing.JLabel();
        radioBotonTrail = new javax.swing.JRadioButton();
        labelTamanioRuedasTrail = new javax.swing.JLabel();
        comboboxTamanioRueda = new javax.swing.JComboBox<String>();
        labelMaterialCuadroTrail = new javax.swing.JLabel();
        comboboxMaterialCuadroTrail = new javax.swing.JComboBox<String>();
        radioBotonCrossCountry = new javax.swing.JRadioButton();
        radioBotonDescenso = new javax.swing.JRadioButton();
        radioBotonFatBike = new javax.swing.JRadioButton();
        radioBotonCarretera = new javax.swing.JRadioButton();
        labelMaterialCuadroCarretera = new javax.swing.JLabel();
        comboboxMaterialCuadroCarretera = new javax.swing.JComboBox<String>();
        labelMaterialCuadroCarretera1 = new javax.swing.JLabel();
        comboboxTipoFreno = new javax.swing.JComboBox<String>();
        etiquetaProveedor = new javax.swing.JLabel();
        etiquetaFechaAlta = new javax.swing.JLabel();
        etiquetaTelefonoContacto = new javax.swing.JLabel();
        campoTextoProveedor = new javax.swing.JFormattedTextField();
        campoTextoTelefonoContacto = new javax.swing.JFormattedTextField();
        campoTextoPrecioCoste = new javax.swing.JFormattedTextField();
        etiquetaPrecioCoste = new javax.swing.JLabel();
        botonGuardar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        spinnerFechaAlta = new javax.swing.JSpinner();
        panelUbicacionPVP = new javax.swing.JPanel();
        etiquetaUbicacion = new javax.swing.JLabel();
        comboboxUbicacion = new javax.swing.JComboBox<String>();
        etiquetaPVP = new javax.swing.JLabel();
        campoTextoPVP = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulario para añadir bicicleta");

        panelPrincipal.setBackground(new java.awt.Color(153, 0, 153));
        panelPrincipal.setToolTipText("selecciona el tipo de bicicleta");

        etiquetaCodigo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaCodigo.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaCodigo.setLabelFor(campoTextoCodigo);
        etiquetaCodigo.setText("Código:");
        etiquetaCodigo.setToolTipText("Codigo de la bicicleta");

        campoTextoCodigo.setToolTipText("Introduce el código de la bicicleta");
        campoTextoCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoCodigoKeyTyped(evt);
            }
        });

        etiquetaModelo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaModelo.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaModelo.setLabelFor(campoTextoModelo);
        etiquetaModelo.setText("Modelo:");
        etiquetaModelo.setToolTipText("Modelo de la bicicleta");

        campoTextoModelo.setToolTipText("Introduce el modelo la bicicleta");
        campoTextoModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoModeloKeyTyped(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        labelTitulo.setForeground(new java.awt.Color(0, 0, 0));
        labelTitulo.setText("Añadir nueva bicicleta");
        labelTitulo.setToolTipText("Formulario para añadir una bicicleta");

        campoTextoMarca.setToolTipText("Introduce la marca de la bicicleta");
        campoTextoMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoMarcaKeyTyped(evt);
            }
        });

        etiquetaMarca.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaMarca.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaMarca.setLabelFor(campoTextoMarca);
        etiquetaMarca.setText("Marca:");
        etiquetaMarca.setToolTipText("Marca de la bicicleta");

        panelTipo.setBackground(new java.awt.Color(153, 0, 153));
        panelTipo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));

        etiquetaTipo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaTipo.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaTipo.setText("Tipo:");
        etiquetaTipo.setToolTipText("Tipo de bicicleta");

        radioBotonTrail.setBackground(new java.awt.Color(153, 0, 153));
        grupoBotonesTipo.add(radioBotonTrail);
        radioBotonTrail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        radioBotonTrail.setForeground(new java.awt.Color(0, 0, 0));
        radioBotonTrail.setText("Trail");
        radioBotonTrail.setToolTipText("Selecciona tipo de bicicleta trail");
        radioBotonTrail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBotonTrailActionPerformed(evt);
            }
        });

        labelTamanioRuedasTrail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTamanioRuedasTrail.setForeground(new java.awt.Color(0, 0, 0));
        labelTamanioRuedasTrail.setLabelFor(comboboxTamanioRueda);
        labelTamanioRuedasTrail.setText("Tamaño de ruedas:");
        labelTamanioRuedasTrail.setToolTipText("Tamaño de ruedas en pulgadas");

        comboboxTamanioRueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "26''", "27.5''", "29''" }));
        comboboxTamanioRueda.setToolTipText("Selecciona el tamaño de las ruedas");

        labelMaterialCuadroTrail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelMaterialCuadroTrail.setForeground(new java.awt.Color(0, 0, 0));
        labelMaterialCuadroTrail.setLabelFor(comboboxMaterialCuadroCarretera);
        labelMaterialCuadroTrail.setText("Material del cuadro:");
        labelMaterialCuadroTrail.setToolTipText("Material del cuadro de bicicleta tipo Trail");

        comboboxMaterialCuadroTrail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aluminio", "Carbono" }));
        comboboxMaterialCuadroTrail.setToolTipText("Selecciona el material del cuadro de la bicicleta tipo Trail");

        radioBotonCrossCountry.setBackground(new java.awt.Color(153, 0, 153));
        grupoBotonesTipo.add(radioBotonCrossCountry);
        radioBotonCrossCountry.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        radioBotonCrossCountry.setForeground(new java.awt.Color(0, 0, 0));
        radioBotonCrossCountry.setText("Cross country");
        radioBotonCrossCountry.setToolTipText("Selecciona tipo de bicicleta cross country");
        radioBotonCrossCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBotonCrossCountryActionPerformed(evt);
            }
        });

        radioBotonDescenso.setBackground(new java.awt.Color(153, 0, 153));
        grupoBotonesTipo.add(radioBotonDescenso);
        radioBotonDescenso.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        radioBotonDescenso.setForeground(new java.awt.Color(0, 0, 0));
        radioBotonDescenso.setText("Descenso");
        radioBotonDescenso.setToolTipText("Selecciona tipo de bicicleta de descenso");

        radioBotonFatBike.setBackground(new java.awt.Color(153, 0, 153));
        grupoBotonesTipo.add(radioBotonFatBike);
        radioBotonFatBike.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        radioBotonFatBike.setForeground(new java.awt.Color(0, 0, 0));
        radioBotonFatBike.setText("Fat Bike");
        radioBotonFatBike.setToolTipText("Selecciona tipo de bicicleta Fat Bike");
        radioBotonFatBike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBotonFatBikeActionPerformed(evt);
            }
        });

        radioBotonCarretera.setBackground(new java.awt.Color(153, 0, 153));
        grupoBotonesTipo.add(radioBotonCarretera);
        radioBotonCarretera.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        radioBotonCarretera.setForeground(new java.awt.Color(0, 0, 0));
        radioBotonCarretera.setText("Carretera");
        radioBotonCarretera.setToolTipText("Selecciona tipo de bibicleta de carretera");
        radioBotonCarretera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBotonCarreteraActionPerformed(evt);
            }
        });

        labelMaterialCuadroCarretera.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelMaterialCuadroCarretera.setForeground(new java.awt.Color(0, 0, 0));
        labelMaterialCuadroCarretera.setLabelFor(comboboxMaterialCuadroTrail);
        labelMaterialCuadroCarretera.setText("Material del cuadro:");
        labelMaterialCuadroCarretera.setToolTipText("Material del cuadro de bicicleta de carretera");

        comboboxMaterialCuadroCarretera.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aluminio", "Carbono" }));
        comboboxMaterialCuadroCarretera.setToolTipText("Selecciona el material del cuadro de la bicicleta de carretera");

        labelMaterialCuadroCarretera1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelMaterialCuadroCarretera1.setForeground(new java.awt.Color(0, 0, 0));
        labelMaterialCuadroCarretera1.setText("Tipo de freno:");
        labelMaterialCuadroCarretera1.setToolTipText("Tipo de freno de bicicleta tipo carretera");

        comboboxTipoFreno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Frenos de disco", "Pastillas de freno" }));
        comboboxTipoFreno.setToolTipText("Selecciona tipo de frenos de bicicleta tipo carretera");

        javax.swing.GroupLayout panelTipoLayout = new javax.swing.GroupLayout(panelTipo);
        panelTipo.setLayout(panelTipoLayout);
        panelTipoLayout.setHorizontalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTipoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(radioBotonDescenso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioBotonFatBike, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioBotonCarretera, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(radioBotonCrossCountry)
                            .addComponent(radioBotonTrail, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaTipo)))
                    .addGroup(panelTipoLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(labelTamanioRuedasTrail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboboxTamanioRueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelMaterialCuadroTrail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboboxMaterialCuadroTrail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelTipoLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(labelMaterialCuadroCarretera)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboboxMaterialCuadroCarretera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelMaterialCuadroCarretera1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboboxTipoFreno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        panelTipoLayout.setVerticalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioBotonTrail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTamanioRuedasTrail)
                    .addComponent(comboboxTamanioRueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMaterialCuadroTrail)
                    .addComponent(comboboxMaterialCuadroTrail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(radioBotonCrossCountry)
                .addGap(18, 18, 18)
                .addComponent(radioBotonDescenso)
                .addGap(18, 18, 18)
                .addComponent(radioBotonFatBike)
                .addGap(18, 18, 18)
                .addComponent(radioBotonCarretera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMaterialCuadroCarretera)
                    .addComponent(comboboxMaterialCuadroCarretera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMaterialCuadroCarretera1)
                    .addComponent(comboboxTipoFreno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        etiquetaProveedor.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaProveedor.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaProveedor.setLabelFor(campoTextoProveedor);
        etiquetaProveedor.setText("Proveedor:");
        etiquetaProveedor.setToolTipText("Proveedor de la bicicleta");

        etiquetaFechaAlta.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaFechaAlta.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaFechaAlta.setLabelFor(spinnerFechaAlta);
        etiquetaFechaAlta.setText("Fecha de alta:");
        etiquetaFechaAlta.setToolTipText("Fecha de alta de la bicicleta");

        etiquetaTelefonoContacto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaTelefonoContacto.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaTelefonoContacto.setLabelFor(campoTextoTelefonoContacto);
        etiquetaTelefonoContacto.setText("Teléfono de contacto:");
        etiquetaTelefonoContacto.setToolTipText("Teléfono de contacto");

        campoTextoProveedor.setToolTipText("Introduce el proveedor de la bicicleta");
        campoTextoProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoProveedorActionPerformed(evt);
            }
        });
        campoTextoProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoProveedorKeyTyped(evt);
            }
        });

        campoTextoTelefonoContacto.setToolTipText("Introduce un teléfono de contacto");
        campoTextoTelefonoContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoTelefonoContactoActionPerformed(evt);
            }
        });
        campoTextoTelefonoContacto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoTelefonoContactoKeyTyped(evt);
            }
        });

        campoTextoPrecioCoste.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        campoTextoPrecioCoste.setToolTipText("Introduce el precio de coste de la bicicleta (máximo 30.000)");
        campoTextoPrecioCoste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoPrecioCosteActionPerformed(evt);
            }
        });
        campoTextoPrecioCoste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoPrecioCosteKeyTyped(evt);
            }
        });

        etiquetaPrecioCoste.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaPrecioCoste.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaPrecioCoste.setLabelFor(campoTextoPrecioCoste);
        etiquetaPrecioCoste.setText("Precio de coste (€):");
        etiquetaPrecioCoste.setToolTipText("Precio de coste de la bicicleta");

        botonGuardar.setBackground(new java.awt.Color(0, 153, 0));
        botonGuardar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonGuardar.setForeground(new java.awt.Color(0, 0, 0));
        botonGuardar.setText("Guardar");
        botonGuardar.setToolTipText("Pulsa este boton para almacenar los datos introducidos en el formulario");
        botonGuardar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 3, true));
        botonGuardar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonGuardarMouseClicked(evt);
            }
        });

        botonSalir.setBackground(new java.awt.Color(204, 0, 0));
        botonSalir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(0, 0, 0));
        botonSalir.setText("Salir");
        botonSalir.setToolTipText("Pulsa este boton para salir del formulario");
        botonSalir.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 3, true));
        botonSalir.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botonSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSalirMouseClicked(evt);
            }
        });

        spinnerFechaAlta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        spinnerFechaAlta.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.DAY_OF_MONTH));
        spinnerFechaAlta.setToolTipText("Selecciona la fecha de alta de la bicicleta");
        spinnerFechaAlta.setEditor(new javax.swing.JSpinner.DateEditor(spinnerFechaAlta, "dd/MM/yyyy"));

        panelUbicacionPVP.setBackground(new java.awt.Color(153, 0, 153));
        panelUbicacionPVP.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelUbicacionPVP.setToolTipText("Ubicación y Precio de venta al público");

        etiquetaUbicacion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaUbicacion.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaUbicacion.setLabelFor(comboboxUbicacion);
        etiquetaUbicacion.setText("Ubicación:");
        etiquetaUbicacion.setToolTipText("Ubicación de la bicicleta");

        comboboxUbicacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Almacén", "Tienda", "Taller" }));
        comboboxUbicacion.setToolTipText("Selecciona la ubicación de la bicicleta");
        comboboxUbicacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboboxUbicacionItemStateChanged(evt);
            }
        });

        etiquetaPVP.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        etiquetaPVP.setForeground(new java.awt.Color(0, 0, 0));
        etiquetaPVP.setLabelFor(campoTextoPVP);
        etiquetaPVP.setText("P.V.P. (€):");
        etiquetaPVP.setToolTipText("Precio venta al público de la bicicleta (sólo disponible desde el almacén)");

        campoTextoPVP.setToolTipText("Introduce el precio venta al público de la bicicleta (máximo 30.000)");
        campoTextoPVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoPVPActionPerformed(evt);
            }
        });
        campoTextoPVP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoPVPKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelUbicacionPVPLayout = new javax.swing.GroupLayout(panelUbicacionPVP);
        panelUbicacionPVP.setLayout(panelUbicacionPVPLayout);
        panelUbicacionPVPLayout.setHorizontalGroup(
            panelUbicacionPVPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUbicacionPVPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(etiquetaUbicacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboboxUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(etiquetaPVP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoTextoPVP, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        panelUbicacionPVPLayout.setVerticalGroup(
            panelUbicacionPVPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUbicacionPVPLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelUbicacionPVPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaUbicacion)
                    .addComponent(etiquetaPVP)
                    .addComponent(campoTextoPVP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboboxUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(labelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(213, 213, 213))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(etiquetaTelefonoContacto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoTextoTelefonoContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(etiquetaFechaAlta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerFechaAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(etiquetaPrecioCoste)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoTextoPrecioCoste, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(etiquetaProveedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoTextoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelPrincipalLayout.createSequentialGroup()
                            .addComponent(etiquetaCodigo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoTextoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(etiquetaModelo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoTextoModelo)
                            .addGap(18, 18, 18)
                            .addComponent(etiquetaMarca)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoTextoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(panelTipo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, 89))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(panelUbicacionPVP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(labelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(etiquetaCodigo)
                        .addComponent(campoTextoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etiquetaModelo)
                            .addComponent(campoTextoModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaMarca)
                            .addComponent(campoTextoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaFechaAlta)
                    .addComponent(etiquetaProveedor)
                    .addComponent(campoTextoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerFechaAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaTelefonoContacto)
                    .addComponent(campoTextoTelefonoContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaPrecioCoste)
                    .addComponent(campoTextoPrecioCoste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelUbicacionPVP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonGuardar)
                    .addComponent(botonSalir))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void radioBotonFatBikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBotonFatBikeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBotonFatBikeActionPerformed

    private void radioBotonCarreteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBotonCarreteraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBotonCarreteraActionPerformed

    private void radioBotonTrailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBotonTrailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBotonTrailActionPerformed

    private void radioBotonCrossCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBotonCrossCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBotonCrossCountryActionPerformed

    private void campoTextoProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoProveedorActionPerformed

    private void campoTextoTelefonoContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoTelefonoContactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoTelefonoContactoActionPerformed

    private void campoTextoPrecioCosteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoPrecioCosteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoPrecioCosteActionPerformed

    private void campoTextoPVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoPVPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoPVPActionPerformed

    private void campoTextoTelefonoContactoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoTelefonoContactoKeyTyped

        // no permite que se introduzcan mas de 9 caracteres
        if (this.campoTextoTelefonoContacto.getText().length() >= 9) {
            evt.consume();
        }

        // obtengo el caracter introducido
        char c = evt.getKeyChar();
        // si el carácter no es un número, se ignora
        if (!Character.isDigit(c)) {
            evt.consume(); // evita que el carácter no numérico se introduzca
        }

    }//GEN-LAST:event_campoTextoTelefonoContactoKeyTyped

    private void campoTextoPrecioCosteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoPrecioCosteKeyTyped

        int caracterIntroducido = evt.getKeyChar();

        // Comprobar si es un número
        boolean esNumero = caracterIntroducido >= 48 && caracterIntroducido <= 57;

        if (!esNumero) {
            evt.consume();  // Si no es un número, se cancela la acción
        } else {
            // Obtener el texto actual del campo
            String textoActual = ((JTextField) evt.getSource()).getText();

            // Concatenar el carácter introducido para obtener el valor completo
            String textoConNuevoCaracter = textoActual + evt.getKeyChar();

            try {
                // Convertir el texto a un número entero
                int valorIntroducido = Integer.parseInt(textoConNuevoCaracter);

                // Si el valor es mayor a 30.000, se cancela la acción
                if (valorIntroducido > 30000) {
                    evt.consume();  // No permitir valores mayores a 30.000
                    JOptionPane.showMessageDialog(null, "El valor no puede superar los 30.000 €.");
                    this.campoTextoPrecioCoste.setText("");
                }
            } catch (NumberFormatException e) {
                // En caso de error en la conversión, cancelar la acción
                evt.consume();
            }
        }

    }//GEN-LAST:event_campoTextoPrecioCosteKeyTyped

    private void campoTextoCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoCodigoKeyTyped
        // Obtenemos el carácter que fue tecleado
        char c = evt.getKeyChar();

        // Verificamos si el carácter es alfanumérico (letra o dígito)
        if (!Character.isLetterOrDigit(c)) {
            evt.consume(); // No permite caracteres que no sean letras o dígitos
        }

        // Validamos que el código no tenga más de 10 caracteres de longitud
        if (this.campoTextoCodigo.getText().length() >= 10) {
            evt.consume(); // Evita que el usuario escriba más de 10 caracteres
        }
    }//GEN-LAST:event_campoTextoCodigoKeyTyped

    private void campoTextoModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoModeloKeyTyped
        // Obtenemos el carácter que fue tecleado
        char c = evt.getKeyChar();

        // Verificamos si el carácter es alfanumérico (letra o dígito)
        if (!Character.isLetterOrDigit(c)) {
            evt.consume(); // No permite caracteres que no sean letras o dígitos
        }

        // Validamos que el modelo no tenga más de 15 caracteres de longitud
        if (this.campoTextoModelo.getText().length() >= 15) {
            evt.consume(); // Evita que el usuario escriba más de 10 caracteres
        }
    }//GEN-LAST:event_campoTextoModeloKeyTyped

    private void campoTextoMarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoMarcaKeyTyped
        // Obtenemos el carácter que fue tecleado
        char c = evt.getKeyChar();

        // Verificamos si el carácter es una letra
        if (!Character.isLetter(c)) {
            evt.consume(); // No permite caracteres que no sean letras
        }

        // Validamos que la marca no tenga más de 10 caracteres de longitud
        if (this.campoTextoMarca.getText().length() >= 10) {
            evt.consume(); // Evita que el usuario escriba más de 10 caracteres
        }
    }//GEN-LAST:event_campoTextoMarcaKeyTyped

    private void campoTextoProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoProveedorKeyTyped
        // Obtenemos el carácter que fue tecleado
        char c = evt.getKeyChar();

        // Verificamos si el carácter es una letra
        if (!Character.isLetter(c)) {
            evt.consume(); // No permite caracteres que no sean letras
        }

        // Validamos que el proveedor no tenga más de 10 caracteres de longitud
        if (this.campoTextoMarca.getText().length() >= 10) {
            evt.consume(); // Evita que el usuario escriba más de 10 caracteres
        }
    }//GEN-LAST:event_campoTextoProveedorKeyTyped

    private void comboboxUbicacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboboxUbicacionItemStateChanged
        // si en el combobox han marcado almacén, opción 1, se activa el campo PVP
        if (this.comboboxUbicacion.getSelectedIndex() == 1) {
            this.campoTextoPVP.setEnabled(true);
        } else {
            // sino desactivo el campo PVP y borro su contenido, suponemos que el usuario ha cambiado de opinión
            this.campoTextoPVP.setEnabled(false);
            this.campoTextoPVP.setText("");
        }
    }//GEN-LAST:event_comboboxUbicacionItemStateChanged

    private void campoTextoPVPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoPVPKeyTyped
        // Obtenemos el carácter que fue tecleado
        char c = evt.getKeyChar();

        // Verificamos si el carácter no es un número
        if (!Character.isDigit(c)) {
            evt.consume(); // No permite caracteres que no sean dígitos
        }
    }//GEN-LAST:event_campoTextoPVPKeyTyped

    private void botonGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonGuardarMouseClicked

        StringBuilder mensajeErrorSalidaAlUsuario = new StringBuilder();
        boolean sonCorrectosTodosLosCampos
                = this.esCorrectoCampoTextoCodigo()
                && this.esCorrectoCampoTextoMarca()
                && this.esCorrectoCampoTextoModelo()
                && this.estaSeleccionadoAlgunTipoBicicleta()
                && this.esCorrectoCampoTextoPrecioCoste()
                && this.esCorrectoCampoTextoProveedor()
                && this.esCorrectoCampoTextoTelefonoContacto()
                && this.esCorrectoComboboxUbicacion()
                && this.esCorrectoCampoTextoPVP();

        if (!sonCorrectosTodosLosCampos) {
            if (!this.esCorrectoCampoTextoCodigo()) {
                mensajeErrorSalidaAlUsuario.append("El código no es válido.\n");
            }

            if (!this.esCorrectoCampoTextoMarca()) {
                mensajeErrorSalidaAlUsuario.append("La marca no es válida.\n");
            }

            if (!this.esCorrectoCampoTextoModelo()) {
                mensajeErrorSalidaAlUsuario.append("El modelo no es válido.\n");
            }

            if (!this.estaSeleccionadoAlgunTipoBicicleta()) {
                mensajeErrorSalidaAlUsuario.append("Debe seleccionar algún tipo de bicicleta.\n");
            }

            if (!this.esCorrectoCampoTextoPrecioCoste()) {
                mensajeErrorSalidaAlUsuario.append("El precio de coste no es válido.\n");
            }

            if (!this.esCorrectoCampoTextoProveedor()) {
                mensajeErrorSalidaAlUsuario.append("El proveedor no es válido.\n");
            }

            if (!this.esCorrectoCampoTextoTelefonoContacto()) {
                mensajeErrorSalidaAlUsuario.append("El teléfono de contacto no es válido.\n");
            }

            if (!this.esCorrectoComboboxUbicacion()) {
                mensajeErrorSalidaAlUsuario.append("La ubicación no es válida.\n");

                if (!this.esCorrectoCampoTextoPVP()) {
                    mensajeErrorSalidaAlUsuario.append("El P.V.P. no es válido.\n");
                }
            }

            JOptionPane.showMessageDialog(null, mensajeErrorSalidaAlUsuario.toString());
            
        } else {
            JOptionPane.showMessageDialog(null, "Registro guardado con éxito");
            this.limpiarYResetearFormulario();
        }
    }//GEN-LAST:event_botonGuardarMouseClicked

    private void botonSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSalirMouseClicked

        // Verificar si el usuario ha introducido algún dato (puedes ajustar esta condición según sea necesario)
        if (this.hayDatosIntroduciosEnElFormulario()) {
            // Mostrar el cuadro de diálogo de confirmación
            int respuesta = JOptionPane.showConfirmDialog(
                    null,
                    "<html>¡¡¡ Atención hay información en el formulario que no se podrá recuperar !!!<br><center>¿Está seguro que desea salir?</center></html>",
                    "Confirmar",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );

            // Verificar la respuesta del usuario
            if (respuesta == JOptionPane.YES_OPTION) {
                // Cerrar el cuadro de diálogo actual y volver al formulario principal
                this.dispose();  // Cierra el JDialog
            } else {
                // Si elige "No", no se hace nada, la interfaz se queda como está
            }
        } else {
            // Si no hay datos introducidos, simplemente cerrar
            this.dispose();  // Cierra el JDialog
        }

    }//GEN-LAST:event_botonSalirMouseClicked

    private void desabilitarInputsAlIniciarFormulario() {
        this.comboboxTamanioRueda.setEnabled(false);
        this.comboboxMaterialCuadroTrail.setEnabled(false);
        this.comboboxMaterialCuadroCarretera.setEnabled(false);
        this.comboboxTipoFreno.setEnabled(false);
        this.campoTextoPVP.setEnabled(false);
    }

    private void anadirEventosPersonalizados(
            JComboBox tamanioRuedas,
            JComboBox materialTrail,
            JComboBox materialCarretera,
            JComboBox tipoFrenos) {
        // Añadir un ItemListener al radio boton de trail
        this.radioBotonTrail.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    // Si el radio botón se selecciona
                    tamanioRuedas.setEnabled(true);
                    materialTrail.setEnabled(true);
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    // Si el radio botón se deselecciona
                    tamanioRuedas.setEnabled(false);
                    materialTrail.setEnabled(false);
                }
            }
        });
        // Añadir un ItemListener al radio boton de carretera
        this.radioBotonCarretera.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    // Si el radio botón se selecciona
                    tipoFrenos.setEnabled(true);
                    materialCarretera.setEnabled(true);
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    // Si el radio botón se deselecciona
                    tipoFrenos.setEnabled(false);
                    materialCarretera.setEnabled(false);
                }
            }
        });
    }

    /*==========================================================================
    Funciones que comprueban el estado correcto de cada campo del formulario
    ==========================================================================*/
    private boolean esCorrectoCampoTextoCodigo() {
        return this.campoTextoCodigo.getText().length() > 0;
    }

    private boolean esCorrectoCampoTextoModelo() {
        return this.campoTextoModelo.getText().length() > 0;
    }

    private boolean esCorrectoCampoTextoMarca() {
        return this.campoTextoMarca.getText().length() > 0;
    }

    private boolean estaSeleccionadoAlgunTipoBicicleta() {
        return this.grupoBotonesTipo.getSelection() != null;
    }

    private boolean esCorrectoCampoTextoProveedor() {
        return this.campoTextoProveedor.getText().length() > 0;
    }

    private boolean esCorrectoCampoTextoTelefonoContacto() {
        return this.campoTextoTelefonoContacto.getText().length() > 0;
    }

    private boolean esCorrectoCampoTextoPrecioCoste() {
        return this.campoTextoPrecioCoste.getText().length() > 0;
    }

    private boolean esCorrectoComboboxUbicacion() {
        return this.comboboxUbicacion.getSelectedIndex() != 0;
    }

    private boolean esCorrectoCampoTextoPVP() {
        // Si la ubicación es "Almacén" (índice 1), PVP debe estar lleno
        if (this.comboboxUbicacion.getSelectedIndex() == 1) {
            return this.campoTextoPVP.getText().length() > 0;
        }
        // Si la ubicación es diferente a "Almacén", no es necesario validar PVP
        return true;
    }

    private void limpiarYResetearFormulario() {
        this.campoTextoCodigo.setText("");
        this.campoTextoMarca.setText("");
        this.campoTextoModelo.setText("");
        this.campoTextoPVP.setText("");
        this.campoTextoPrecioCoste.setText("");
        this.campoTextoProveedor.setText("");
        this.campoTextoTelefonoContacto.setText("");
        this.grupoBotonesTipo.clearSelection();
        this.comboboxUbicacion.setSelectedIndex(0);
        this.desabilitarInputsAlIniciarFormulario();
        this.colocarFechaDeAltaAFechaDeHoy();
        this.comboboxMaterialCuadroTrail.setSelectedIndex(0);
        this.comboboxMaterialCuadroCarretera.setSelectedIndex(0);
        this.comboboxTamanioRueda.setSelectedIndex(0);
        this.comboboxTipoFreno.setSelectedIndex(0);
    }

    private void colocarFechaDeAltaAFechaDeHoy() {
        // Obtener la fecha de hoy
        java.util.Date fechaHoy = new java.util.Date();

        // Establecer la fecha en el JSpinner
        this.spinnerFechaAlta.setValue(fechaHoy);

        // Configurar el editor del spinner para asegurarnos que muestre la fecha completa
        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinnerFechaAlta, "dd/MM/yyyy");
        this.spinnerFechaAlta.setEditor(editor);
    }

    private boolean hayDatosIntroduciosEnElFormulario() {
        return !this.campoTextoCodigo.getText().isEmpty()
                || !this.campoTextoMarca.getText().isEmpty()
                || !this.campoTextoModelo.getText().isEmpty()
                || !this.campoTextoPrecioCoste.getText().isEmpty()
                || !this.campoTextoProveedor.getText().isEmpty()
                || !this.campoTextoTelefonoContacto.getText().isEmpty()
                || this.estaSeleccionadoAlgunTipoBicicleta()
                || this.comboboxUbicacion.getSelectedIndex() != 0;
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FormNuevaBicicleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FormNuevaBicicleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FormNuevaBicicleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FormNuevaBicicleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                FormNuevaBicicleta dialog = new FormNuevaBicicleta(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JTextField campoTextoCodigo;
    private javax.swing.JTextField campoTextoMarca;
    private javax.swing.JTextField campoTextoModelo;
    private javax.swing.JFormattedTextField campoTextoPVP;
    private javax.swing.JFormattedTextField campoTextoPrecioCoste;
    private javax.swing.JFormattedTextField campoTextoProveedor;
    private javax.swing.JFormattedTextField campoTextoTelefonoContacto;
    private javax.swing.JComboBox<String> comboboxMaterialCuadroCarretera;
    private javax.swing.JComboBox<String> comboboxMaterialCuadroTrail;
    private javax.swing.JComboBox<String> comboboxTamanioRueda;
    private javax.swing.JComboBox<String> comboboxTipoFreno;
    private javax.swing.JComboBox<String> comboboxUbicacion;
    private javax.swing.JLabel etiquetaCodigo;
    private javax.swing.JLabel etiquetaFechaAlta;
    private javax.swing.JLabel etiquetaMarca;
    private javax.swing.JLabel etiquetaModelo;
    private javax.swing.JLabel etiquetaPVP;
    private javax.swing.JLabel etiquetaPrecioCoste;
    private javax.swing.JLabel etiquetaProveedor;
    private javax.swing.JLabel etiquetaTelefonoContacto;
    private javax.swing.JLabel etiquetaTipo;
    private javax.swing.JLabel etiquetaUbicacion;
    private javax.swing.ButtonGroup grupoBotonesTipo;
    private javax.swing.JLabel labelMaterialCuadroCarretera;
    private javax.swing.JLabel labelMaterialCuadroCarretera1;
    private javax.swing.JLabel labelMaterialCuadroTrail;
    private javax.swing.JLabel labelTamanioRuedasTrail;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelTipo;
    private javax.swing.JPanel panelUbicacionPVP;
    private javax.swing.JRadioButton radioBotonCarretera;
    private javax.swing.JRadioButton radioBotonCrossCountry;
    private javax.swing.JRadioButton radioBotonDescenso;
    private javax.swing.JRadioButton radioBotonFatBike;
    private javax.swing.JRadioButton radioBotonTrail;
    private javax.swing.JSpinner spinnerFechaAlta;
    // End of variables declaration//GEN-END:variables

}
