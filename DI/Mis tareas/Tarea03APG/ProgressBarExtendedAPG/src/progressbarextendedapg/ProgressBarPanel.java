package progressbarextendedapg;

/**
 * Clase que representa un panel personalizado para configurar los rangos de una
 * barra de progreso extendida.
 * <p>
 * Este panel incluye dos deslizadores ({@code JSlider}) para establecer los
 * valores de dos rangos, y etiquetas ({@code JLabel}) que muestran los valores
 * actuales seleccionados.
 * </p>
 *
 * <h2>Características:</h2>
 * <ul>
 * <li>Dos deslizadores para configurar los valores de los rangos.</li>
 * <li>Etiquetas dinámicas que muestran los valores seleccionados en
 * porcentaje.</li>
 * <li>Mecanismo para evitar solapamientos de valores entre los
 * deslizadores.</li>
 * <li>Proporciona un método para obtener los valores seleccionados como un
 * objeto {@link Rangos}.</li>
 * </ul>
 *
 * <h2>Integración:</h2>
 * Este panel puede integrarse en una aplicación más amplia para permitir a los
 * usuarios configurar visualmente los rangos de una barra de progreso
 * personalizada.
 *
 * @author ANDRÉS SAMUEL PODADERA GONZÁLEZ
 * <p>
 * Desarrollo Interfaces Desarrollo de aplicaciones multiplataforma 2024/2025
 * </p>
 */
public class ProgressBarPanel extends javax.swing.JPanel {

    /**
     * Constructor de la clase {@code ProgressBarPanel}.
     * <p>
     * Inicializa los componentes del panel, incluyendo deslizadores, etiquetas
     * y sus eventos asociados.
     * </p>
     */
    public ProgressBarPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSliderNivel1 = new javax.swing.JSlider();
        jSliderNivel2 = new javax.swing.JSlider();
        titulo1 = new javax.swing.JLabel();
        titulo2 = new javax.swing.JLabel();
        JLabelNivel1 = new javax.swing.JLabel();
        JLabelNivel2 = new javax.swing.JLabel();

        jSliderNivel1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderNivel1StateChanged(evt);
            }
        });

        jSliderNivel2.setValue(75);
        jSliderNivel2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderNivel2StateChanged(evt);
            }
        });

        titulo1.setText("Rango 1:");

        titulo2.setText("Rango 2:");

        JLabelNivel1.setText("50%");

        JLabelNivel2.setText("75%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titulo2)
                    .addComponent(titulo1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSliderNivel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JLabelNivel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSliderNivel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JLabelNivel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSliderNivel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(titulo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSliderNivel2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(titulo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(JLabelNivel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(JLabelNivel2)
                        .addGap(14, 14, 14)))
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSliderNivel2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderNivel2StateChanged
        if (this.jSliderNivel2.getValue() <= this.jSliderNivel1.getValue()) {
            this.jSliderNivel1.setValue(this.jSliderNivel2.getValue());
        }
        this.mostrarValores();
    }//GEN-LAST:event_jSliderNivel2StateChanged

    private void jSliderNivel1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderNivel1StateChanged
        if (this.jSliderNivel1.getValue() >= this.jSliderNivel2.getValue()) {
            this.jSliderNivel2.setValue(this.jSliderNivel1.getValue());
        }
        this.mostrarValores();
    }//GEN-LAST:event_jSliderNivel1StateChanged

    /**
     * Obtiene los valores seleccionados en los deslizadores como un objeto
     * {@link Rangos}.
     *
     * @return Un objeto {@link Rangos} que contiene los valores seleccionados
     * por los deslizadores.
     */
    public Rangos getSelectedValue() {
        return new Rangos(jSliderNivel1.getValue(), jSliderNivel2.getValue());
    }

    /**
     * Actualiza las etiquetas que muestran los valores actuales de los
     * deslizadores.
     * <p>
     * Este método sincroniza los textos de las etiquetas {@code JLabelNivel1} y
     * {@code JLabelNivel2} con los valores seleccionados en los deslizadores
     * {@code jSliderNivel1} y {@code jSliderNivel2}.
     * </p>
     */
    public void mostrarValores() {
        this.JLabelNivel1.setText(this.jSliderNivel1.getValue() + "%");
        this.JLabelNivel2.setText(this.jSliderNivel2.getValue() + "%");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelNivel1;
    private javax.swing.JLabel JLabelNivel2;
    private javax.swing.JSlider jSliderNivel1;
    private javax.swing.JSlider jSliderNivel2;
    private javax.swing.JLabel titulo1;
    private javax.swing.JLabel titulo2;
    // End of variables declaration//GEN-END:variables
}
